{"version":3,"names":[],"sources":["ContentProtectionRequest.ts"],"sourcesContent":["/**\n * A request, either for a certificate or a license.\n * @public\n */\nexport interface ContentProtectionRequest {\n    /**\n     * The URL for the certificate server. By default, this will equal the certificate URL configured in the\n     * `{@link KeySystemConfiguration}`.\n     */\n    url: string;\n\n    /**\n     * The method of the HTTP request, for example: GET, POST or PUT.\n     *\n     * @remarks\n     * <br/> - Will be equal to GET for Fairplay certificate requests and POST for Widevine certificate requests.\n     * <br/> - Will be equal to POST for all license requests.\n     */\n    method: string;\n\n    /**\n     * The HTTP request headers to be sent to the server.\n     */\n    headers: { [headerName: string]: string };\n\n    /**\n     * The body of the certificate request.\n     *\n     * @remarks\n     * <br/> - For GET requests (such as with Fairplay), the body will be empty (null).\n     * <br/> - For POST requests (such as with Widevine): the body will contain the two bytes in an array as specified in the certificate request protocol.\n     */\n    body: Uint8Array | null;\n\n    /**\n     * Whether the player is allowed to use credentials for cross-origin requests.\n     */\n    useCredentials: boolean;\n}\n\n/**\n * A request for a certificate.\n *\n * @public\n */\nexport type CertificateRequest = ContentProtectionRequest;\n\n/**\n * A request for a license.\n * @public\n */\nexport interface LicenseRequest extends ContentProtectionRequest {\n    /**\n     * The SKD URL (for example skd://fb64ba7c5bd34bf188cf9ba76ab8370e) as extracted from the #EXT-X-KEY tag in the HLS playlist.\n     *\n     * @remarks\n     * <br/> - Only available for Fairplay license requests. The value will be `undefined` otherwise.\n     */\n    fairplaySkdUrl: string | undefined;\n}\n"],"mappings":""}