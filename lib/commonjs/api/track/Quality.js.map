{"version":3,"names":[],"sources":["Quality.ts"],"sourcesContent":["/**\n * Represents a quality of a media track.\n *\n * @public\n */\nexport interface Quality {\n  /**\n   * The average bandwidth of the quality.\n   */\n  readonly averageBandwidth?: number;\n\n  /**\n   * The required bandwidth for the quality.\n   */\n  readonly bandwidth: number;\n\n  /**\n   * The codecs of the quality.\n   *\n   * @remarks\n   * <br/> - These are represented as a string containing the codecs as defined by the manifest.\n   */\n  readonly codecs: string;\n\n  /**\n   * The identifier for this quality. This identifier is tied to the stream's internal representation. It may be empty. For a unique id, use {@link Quality.uid}.\n   */\n  readonly id: string;\n\n  /**\n   * The unique identifier for this quality.\n   */\n  readonly uid: number;\n\n  /**\n   * The name of the quality.\n   */\n  readonly name: string;\n\n  /**\n   * The label of the quality.\n   */\n  label: string;\n\n  /**\n   * Whether the quality is available.\n   *\n   * @remarks\n   * <br/> - A quality can be unavailable due to a DRM restriction (e.g. HDCP).\n   */\n  readonly available: boolean;\n}\n\n/**\n * Represents a quality of a video track.\n *\n * @public\n */\nexport interface VideoQuality extends Quality {\n  /**\n   * The video height of the video quality, in pixels.\n   */\n  readonly height: number;\n\n  /**\n   * The video width of the video quality, in pixels.\n   */\n  readonly width: number;\n\n  /**\n   * The framerate of the video quality.\n   */\n  readonly frameRate: number;\n\n  /**\n   * The timestamp of the first frame of the video quality, in seconds.\n   */\n  readonly firstFrame: number;\n}\n\n/**\n * Represents a quality of an audio track.\n *\n * @public\n */\nexport interface AudioQuality extends Quality {\n  /**\n   * The sampling rate of the audio quality.\n   */\n  readonly audioSamplingRate: number | [number, number];\n}\n"],"mappings":""}