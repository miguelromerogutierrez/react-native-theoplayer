{"version":3,"names":[],"sources":["ABRConfiguration.ts"],"sourcesContent":["/**\n * The adaptive bitrate strategy of the first segment, represented by a value from the following list:\n * <br/> - `'performance'`: The player will optimize ABR behavior to focus on the performance of the player. This strategy initiates playback with the lowest quality suitable for the device which means faster start-up time.\n * <br/> - `'quality'`: The player will optimize ABR behavior to focus displaying the best visual quality to the end-user. This strategy initiates playback with the highest bit rate suitable for the device.\n * <br/> - `'bandwidth'`: The player will optimize the ABR behavior to focus on displaying the most optimal quality based on historic data of available bandwidth and knowledge of the network conditions.\n *\n * @public\n */\nexport type ABRStrategyType = 'performance' | 'quality' | 'bandwidth';\n\n/**\n * Describes the metadata of the adaptive bitrate strategy.\n *\n * @public\n */\nexport interface ABRMetadata {\n  /**\n   * The initial bitrate, in bits per second.\n   *\n   * @defaultValue Bitrate available to the browser.\n   */\n  bitrate?: number;\n}\n\n/**\n * Describes the configuration of the adaptive bitrate strategy.\n *\n * @public\n */\nexport interface ABRStrategyConfiguration {\n  /**\n   * The strategy for initial playback.\n   */\n  type: ABRStrategyType;\n\n  /**\n   * The metadata for the initial playback strategy.\n   *\n   * @defaultValue A {@link ABRMetadata} object with default values.\n   */\n  metadata?: ABRMetadata;\n}\n\n/**\n * The adaptive bitrate stratey.\n *\n * @public\n */\nexport type ABRStrategy = ABRStrategyConfiguration | ABRStrategyType;\n\n/**\n * Describes the adaptive bitrate configuration.\n *\n * @public\n */\nexport interface ABRConfiguration {\n  /**\n   * The adaptive bitrate strategy.\n   *\n   * @defaultValue `'bandwidth'`\n   */\n  strategy?: ABRStrategy;\n\n  /**\n   * The amount which the player should buffer ahead of the current playback position, in seconds.\n   *\n   * @remarks\n   * <br/> - Before v4.3.0: This duration has a maximum of 60 seconds.\n   * <br/> - After v4.3.0: This duration has no maximum.\n   * <br/> - The player might reduce or ignore the configured amount because of device or performance constraints.\n   *\n   * @defaultValue `20`\n   */\n  targetBuffer?: number;\n\n  /**\n   * The amount of data which the player should keep in its buffer before the current playback position, in seconds.\n   * This configuration option can be used to reduce the memory footprint on memory restricted devices or on devices\n   * which don't automatically prune decoder buffers.\n   *\n   * Note that the player can decide to keep less data in the decoder buffer in case memory is running low.\n   * A value of 0 or lower is not accepted and will be treated as default.\n   *\n   * @defaultValue `30`\n   *\n   * @remarks\n   * <br/> - This property is currently supported on Web platforms only.\n   */\n  bufferLookbackWindow?: number;\n\n  /**\n   * The maximum length of the player's buffer, in seconds.\n   *\n   * The player will initially buffer up to {@link ABRConfiguration.targetBuffer} seconds of media data.\n   * If the player detects that the decoder is unable to hold so much data,\n   * it will reduce `maxBufferLength` and restrict `targetBuffer` to be less than\n   * this maximum.\n   *\n   * @remarks\n   * <br/> - This property is currently supported on Web platforms only.\n   */\n  readonly maxBufferLength?: number;\n}\n"],"mappings":""}