{"version":3,"names":[],"sources":["AdsAPI.ts"],"sourcesContent":["/**\n * The API for advertisements.\n */\nimport type { AdDescription } from \"../source/ads/Ads\";\nimport type { AdBreak } from \"./AdBreak\";\nimport type { Ad } from \"./Ad\";\nimport type { GoogleDAI } from \"./GoogleDai\";\n\nexport interface AdsAPI {\n  /**\n   * Whether a linear ad is currently playing.\n   */\n  playing(): Promise<boolean>;\n\n  /**\n   * Skip the current linear ad.\n   *\n   * @remarks\n   * <br/> - This will have no effect when the current linear ad is (not yet) skippable.\n   */\n  skip(): void;\n\n  /**\n   * The currently playing ad break.\n   */\n  currentAdBreak(): Promise<AdBreak>;\n\n  /**\n   * List of currently playing ads.\n   */\n  currentAds(): Promise<Ad[]>;\n\n  /**\n   * List of ad breaks which still need to be played.\n   */\n  scheduledAdBreaks(): Promise<AdBreak[]>;\n\n  /**\n   * Add an ad break request.\n   *\n   * @remarks\n   * <br/> - Prefer scheduling ad breaks up front through SourceConfiguration.ads.\n   */\n  schedule(ad: AdDescription): void;\n\n  /**\n   * The Google DAI API.\n   *\n   * @remarks\n   * <br/> - Only available when the feature or extension `'google-dai'` is enabled.\n   */\n  readonly dai?: GoogleDAI;\n}\n"],"mappings":""}